{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "stagered-text",
  "type": "registry:ui",
  "title": "stagered text",
  "description": "An animated stagered component.",
  "files": [
    {
      "path": "src/components/ui/animatedText.tsx",
      "content": "\"use client\";\nimport { useGSAP } from \"@gsap/react\";\nimport gsap from \"gsap\";\nimport { CustomEase, SplitText } from \"gsap/all\";\nimport { cloneElement, ReactElement, Ref, useRef } from \"react\";\n\ntype fromType =\n  | number\n  | \"start\"\n  | \"center\"\n  | \"end\"\n  | \"edges\"\n  | \"random\"\n  | [number, number]\n  | undefined;\ntype AnimatedTextProps = {\n  children: ReactElement<any>;\n  delay?: number;\n  duration?: number;\n  from?: fromType;\n};\n\ngsap.registerPlugin(SplitText , CustomEase);\n\nfunction AnimatedText({\n  children,\n  delay = 0,\n  duration = 1,\n  from = \"random\",\n}: AnimatedTextProps) {\n  const childRef = useRef<HTMLElement | null>(null);\n  const splitRef = useRef<any>(null);\n\n  useGSAP(() => {\n    if (childRef.current) {\n      const tl = gsap.timeline();\n      splitRef.current = new SplitText(childRef.current, {\n        type:\"chars\",\n        // mask: \"chars\",\n        charsClass: \"chars++\",\n      });\n      tl.from(splitRef.current.chars, {\n          opacity: 0,\n          filter:\"blur(10px)\",\n        y: 50,\n        x:25,\n        scale: 0.8,\n        stagger: {\n          each: 0.09,\n          from: from,\n        },\n        duration: duration,\n        delay: delay,\n        ease: CustomEase.create(\"custom\", \"M0,0 C0,0.816 1.018,1.999 1,0.977 \"),\n      });\n    }\n    return () => {\n      if (splitRef.current) {\n        splitRef.current.revert();\n      }\n    };\n  });\n\n  // Only pass ref if the child supports it\n  return cloneElement(children, {\n    ref: childRef as unknown as Ref<any>,\n  });\n}\n\nexport default AnimatedText;\n",
      "type": "registry:ui"
    }
  ]
}